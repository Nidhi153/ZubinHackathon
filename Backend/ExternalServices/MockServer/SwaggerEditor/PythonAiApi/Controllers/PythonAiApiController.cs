/*
 * Kuju API
 *
 * Kuju API
 *
 * OpenAPI spec version: 1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Collections.Generic;
using Microsoft.AspNetCore.Mvc;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;

using Microsoft.AspNetCore.Authorization;
using MockServer.SwaggerEditor.PythonAiApi.Models;

namespace MockServer.SwaggerEditor.PythonAiApi.Controllers
{
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    [Route("/ai")]
    public class PythonAiApiController : ControllerBase
    {
        /// <summary>
        /// ControlDevice
        /// </summary>
        /// <param name="body"></param>
        /// <response code="200">Success</response>
        [HttpPost]
        [Route("recommendation")]
        [SwaggerOperation("GetRecommendation")]
        [SwaggerResponse(statusCode: 200, type: typeof(GetRecommendationResponse), description: "Success")]
        public virtual IActionResult GetRecommendation([FromBody] GetRecommendationRequest body)
        {
            return new ObjectResult(new GetRecommendationResponse()
            {
                Events = new List<Event>()
                {
                     new()
                    {
                         Eventid="3",
                         Skills=new(){"s1", "s2" }
                    },
                    new()
                    {
                        Eventid="2",
                        Skills=new(){"s1", "s2"}
                    }
                }
            });
        }

        [HttpPost]
        [Route("whatsapp/broadcast")]
        [SwaggerOperation("sendBroadcast")]
        [SwaggerResponse(statusCode: 200, type: typeof(SendBroadcastResponse), description: "Success")]
        public virtual IActionResult SendBroadcast([FromBody] SendBroadcastRequest body)
        {
            return new ObjectResult(new SendBroadcastResponse()
            {
            });
        }

        [HttpPost]
        [Route("chatbot")]
        [SwaggerOperation("sendToChatbot")]
        [SwaggerResponse(statusCode: 200, type: typeof(SendToChatbotResponse), description: "Success")]
        public virtual IActionResult SendToChatbot([FromBody] SendToChatbotRequest body)
        {
            return new ObjectResult(new SendToChatbotResponse()
            {
                Title = "FAQ",
                Text = "I think you are right"
            });
        }
    }
}
